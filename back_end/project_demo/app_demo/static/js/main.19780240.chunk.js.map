{"version":3,"sources":["components/CrudDemo/StringResource.js","components/CrudDemo/CreateAndUpdateModal.jsx","components/CrudDemo/CrudDemo.jsx","components/ChartDemo/ChartDemo.jsx","components/MainPage/MainPage.jsx","components/LoginAndRegister/LoginAndRegister.jsx","App.js","serviceWorker.js","index.js"],"names":["StringResource","id","name","age","address","CreateAndUpdateModal","props","state","loading","visible","funcShowCreateModal","funcOkCallback","a","async","strFooterText","strCteateFooterText","handleOk","funcCreate","funcCallback","setState","funcShowUpdateModal","strUpdateFooterText","funcUpdate","objState","SR","value","objData","axios","request","url","method","params","token","data","success","handleCancel","funcValidateAge","validateStatus","errorMsg","handleAgeChange","funcValidateEmpty","handleInputOnChange","e","strName","target","this","title","onOk","onCancel","footer","key","onClick","type","labelCol","span","wrapperCol","Item","label","help","onChange","min","max","style","width","Component","CrudDemo","funcLoadTable","respond","dataSource","funcUpdateTable","record","refCreateAndUpdateModal","current","funcDelete","columns","dataIndex","editable","render","text","marginRight","onConfirm","React","createRef","extra","rowClassName","bordered","ref","ChartDemo","funcRefresh","map","item","height","scale","alias","forceFit","crosshairs","position","color","Header","Layout","Sider","Content","MainPage","collapsed","username","toggle","history","location","to","trigger","collapsible","className","theme","mode","defaultSelectedKeys","background","padding","margin","minHeight","path","password","register_username","register_password","register_confirm_password","LoginAndRegisterBase","confirmLoading","funcHandleSubmitLogin","preventDefault","form","validateFields","err","values","post","res","status","replace","pathname","message","warning","funcHandleSubmitRegister","handleConfirmBlur","confirmDirty","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","console","log","funcShowRegisterModal","getFieldDecorator","onSubmit","rules","required","prefix","placeholder","htmlType","centered","handleSubmit","hasFeedback","validator","Password","onBlur","LoginAndRegister","Form","create","App","component","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19780240.chunk.js","sourcesContent":["\nlet StringResource = {\n    id: 'id',\n    name : 'name',\n    age : 'age',\n    address : 'address',\n};\n\nexport default StringResource ;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Modal, Button, Form, Input, InputNumber } from 'antd';\nimport axios from 'axios';\nimport SR from './StringResource.js';\n\nexport default class CreateAndUpdateModal extends Component {\n    static propTypes = {\n        token: PropTypes.string.isRequired,\n    }\n\n    state = {\n        loading: false,\n        visible: false,\n    };\n\n    constructor(props) {\n        super(props)\n\n        this.state[SR.name] = { value: '' };\n        this.state[SR.address] = { value: '' };\n        this.state[SR.age] = { value: 0 };\n    }\n\n\n\n\n    funcShowCreateModal = async (funcOkCallback) => {\n        this.strFooterText = this.strCteateFooterText;\n        this.handleOk = this.funcCreate;\n        this.funcCallback = funcOkCallback;\n\n        await this.setState({\n            visible: true,\n        });\n    }\n\n    funcShowUpdateModal = async(id,name,age,address,funcOkCallback) => {\n        this.strFooterText = this.strUpdateFooterText;\n        this.handleOk = this.funcUpdate;\n        this.funcCallback = funcOkCallback;\n        \n        let objState = {};\n        objState[SR.id] = { value: id }; \n        objState[SR.name] = { value: name };\n        objState[SR.age] = { value: age };\n        objState[SR.address] = { value: address };\n        await this.setState(objState);\n        \n        \n\n        this.setState({\n            visible: true,\n        });\n    }\n\n    strFooterText = null;\n    strCteateFooterText = \"Create\";\n    strUpdateFooterText = \"Update\";\n\n    funcCallback = null;\n    handleOk = null;\n\n    funcCreate = async () => {\n        let objData = {};\n        objData[SR.name] = this.state[SR.name].value ;\n        objData[SR.address] = this.state[SR.address].value ;\n        objData[SR.age] = this.state[SR.age].value ;\n        \n        let respond = await axios.request({\n            url: '/api/vi/customer',\n            method: 'post', \n            params: {\n                token:this.props.token,\n              },\n            data: objData ,\n        })\n        \n        if(respond.data.success){\n            this.funcCallback();\n        }\n        \n        this.setState({\n            visible: false,\n        });\n        \n    }\n\n    funcUpdate = async () => {\n        let objData = {};\n        objData[SR.id] = this.state[SR.id].value ;\n        objData[SR.name] = this.state[SR.name].value ;\n        objData[SR.address] = this.state[SR.address].value ;\n        objData[SR.age] = this.state[SR.age].value ;\n        \n        let respond = await axios.request({\n            url: '/api/vi/customer',\n            method: 'put', \n            params: {\n                token:this.props.token,\n              },\n            data: objData ,\n        })\n        \n        if(respond.data.success){\n            this.funcCallback();\n        }\n        \n        this.setState({\n            visible: false,\n        });\n    }\n\n\n\n\n    handleCancel = () => {\n        this.setState({ visible: false });\n    };\n\n    funcValidateAge = (age) => {\n        if (age <= 0 || age >= 100) {\n            return {\n                validateStatus: 'error',\n                errorMsg: 'The age between 0 and 100 ',\n            };\n        }\n        else {\n            return {\n                validateStatus: 'success',\n                errorMsg: null,\n            };\n        }\n\n    }\n\n    handleAgeChange = value => {\n        this.state[SR.age] = {\n            ...this.funcValidateAge(value),\n            value,\n        }\n\n        this.setState(this.state[SR.age]);\n        \n    };\n    \n    funcValidateEmpty = (value) => {\n        if (value === '') {\n            return {\n                validateStatus: 'error',\n                errorMsg: 'please input ! ',\n            };\n        }\n        else {\n            return {\n                validateStatus: 'success',\n                errorMsg: null,\n            };\n        }\n\n    }\n\n    handleInputOnChange = (e) => {\n        let strName = e.target.id;\n        this.state[strName] = {\n             ...this.funcValidateEmpty(e.target.value),\n            value:e.target.value,\n        }\n\n        this.setState(this.state[strName]);\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                span: 4\n            },\n            wrapperCol: {\n                span: 20\n            },\n        };\n\n        const { visible, loading } = this.state;\n\n\n        return (\n            <div>\n                <Modal\n                    visible={visible}\n                    title=\"Title\"\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    footer={[<Button key=\"back\" onClick={this.handleCancel}>Cancel</Button>, <Button key=\"submit\" type=\"primary\" loading={loading} onClick={this.handleOk}>{this.strFooterText}</Button>,]}\n                >\n\n                    <Form  {...formItemLayout}  >\n                        <Form.Item\n                            label={SR.name}\n                            validateStatus={this.state[SR.name].validateStatus}\n                            help={this.state[SR.name].errorMsg}\n                        >\n                            <Input id={SR.name} value={this.state[SR.name].value} onChange={this.handleInputOnChange} />\n                        </Form.Item>\n                        <Form.Item\n                            label={SR.age}\n                            validateStatus={this.state[SR.age].validateStatus}\n                            help={this.state[SR.age].errorMsg}\n                        >\n                            <InputNumber min={0} max={100} value={this.state[SR.age].value} onChange={this.handleAgeChange} style={{width:\"100%\"}} />\n                        </Form.Item>\n                        <Form.Item\n                            label={SR.address}\n                            validateStatus={this.state[SR.address].validateStatus}\n                            help={this.state[SR.address].errorMsg}\n                        >\n                            <Input id={SR.address} value={this.state[SR.address].value} onChange={this.handleInputOnChange} />\n                        </Form.Item>\n\n\n                    </Form>\n\n                </Modal>\n            </div>\n        );\n    }\n\n}\n","import React, { Component } from 'react'\n\nimport { Card, Table, Popconfirm ,Button} from 'antd'\nimport CreateAndUpdateModal from './CreateAndUpdateModal'\n\nimport axios from 'axios';\nimport SR from './StringResource.js';\nimport PropTypes from 'prop-types'\n\nexport default class CrudDemo extends Component {\n    static propTypes = {\n        token: PropTypes.string.isRequired,\n    }\n    constructor(props) {\n        super(props);\n        this.columns = [\n            {\n                title: 'name',\n                dataIndex: 'name',\n                width: '30%',\n                editable: true,\n            },\n            {\n                title: 'age',\n                dataIndex: 'age',\n            },\n            {\n                title: 'address',\n                dataIndex: 'address',\n            },\n            {\n                title: 'operation',\n                dataIndex: 'operation',\n                render: (text, record) =>\n                    (\n                        <div>\n                            <a style={{marginRight:\"10px\"}} onClick={()=>this.funcUpdateTable(record)}>Update</a>   \n                            <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.funcDelete(record.id)}>\n                                <a>Delete</a>\n                            </Popconfirm>\n                        </div>\n                    )\n            },\n        ];\n        \n        this.state = { dataSource: []};\n        this.funcLoadTable();\n        this.refCreateAndUpdateModal = React.createRef();\n        \n    }\n\n\n    \n    funcLoadTable = async() =>{\n        let respond = await axios.request({\n            url: '/api/vi/customer',\n            method: 'get', \n            params: {\n                token:this.props.token,\n              },\n        })\n        \n        if(respond.data.success){\n            this.setState({dataSource :respond.data.data });\n        }\n        \n    }\n    \n    funcUpdateTable = (record) =>{\n        this.refCreateAndUpdateModal.current.funcShowUpdateModal(record.id,record.name,record.age,record.address,this.funcLoadTable);\n    }\n    \n    \n    \n    funcShowCreateModal = () => {\n        this.refCreateAndUpdateModal.current.funcShowCreateModal(this.funcLoadTable);\n    }\n    \n    funcDelete = async (id)=>{\n        let objData = {};\n        objData[SR.id] = id;\n        let respond = await axios.request({\n            url: '/api/vi/customer',\n            method: 'delete',\n            params: {\n                token: this.props.token,\n            },\n            data: objData,\n        })\n        \n        if(respond.data.success){\n            this.funcLoadTable();\n        }\n    }\n\n    render() {\n        const { dataSource } = this.state;\n        const columns = this.columns;\n        return (\n            <Card type=\"inner\" title=\"Crud Demo\" extra={<Button onClick={this.funcShowCreateModal} type=\"primary\" >Create</Button>}>\n    \n                <Table\n                    rowClassName={() => 'editable-row'}\n                    bordered\n                    dataSource={dataSource}\n                    columns={columns}\n                />\n                <CreateAndUpdateModal ref = { this.refCreateAndUpdateModal } token = {this.props.token}></CreateAndUpdateModal>\n            </Card>\n        );\n\n    }\n\n\n\n}\n\n\n\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Chart, Axis, Legend, Tooltip, Geom } from 'bizcharts';\nimport { Card, Button } from 'antd'\nimport axios from 'axios';\n\nexport default class ChartDemo extends Component {\n    static propTypes = {\n        token: PropTypes.string.isRequired,\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            data: [],\n        }\n        this.funcRefresh();\n\n    }\n\n\n    funcRefresh = async () => {\n        let respond = await axios.request({\n            url: '/api/vi/customer',\n            method: 'get',\n            params: {\n                token: this.props.token,\n            },\n        })\n\n        // this.setState({ data: respond.data.data });\n        \n        let data = respond.data.data.map((item)=>{\n            return {\n                name :item.name+'-'+item.address,\n                age:item.age,\n            }\n        });\n        this.setState({data});\n    }\n\n    render() {\n\n\n        const scale = {\n            age: { alias: 'Age', },\n            name: { alias: 'Name', },\n        };\n        return (\n            <Card type=\"inner\" title=\"Crud Demo\" extra={<Button onClick={this.funcRefresh} type=\"primary\" >Refresh</Button>}>\n                <Chart height={500} data={this.state.data} scale={scale} forceFit>\n                    <Axis title name=\"name\" />\n                    <Axis title name=\"age\" />\n                    <Legend />\n                    <Tooltip crosshairs={{ type: 'rect' }} />\n                    <Geom type=\"interval\" position=\"name*age\" color=\"name\" />\n                </Chart>\n            </Card>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\n\n\n\nimport 'antd/dist/antd.css';\nimport './MainPage.css';\nimport { Layout, Menu, Icon } from 'antd';\nimport { Redirect, Switch, Route ,Link } from 'react-router-dom'\n\nimport CrudDemo from '../CrudDemo/CrudDemo'\nimport ChartDemo from '../ChartDemo/ChartDemo'\n\nconst { Header, Sider, Content } = Layout;\n\nexport default class MainPage extends Component {\n\n    constructor(props) {\n        super(props);\n        if (this.props.history.location.state) {\n            this.state.username = this.props.history.location.state.username;\n            this.state.token = this.props.history.location.state.token;\n        }\n\n    }\n\n    state = {\n        collapsed: false,\n\n        username: '',\n        token: '',\n    };\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n\n\n\n    render() {\n        const { username, token } = this.state;\n        if (username === '' || token === '') {\n            return (<Redirect to=\"/login\"></Redirect>)\n        }\n        return (\n            <Layout>\n                <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n                    <div className=\"logo\" />\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                        <Menu.Item key=\"1\">\n                            <Link to=\"/CrudDemo\">\n                                <Icon type=\"home\" />\n                                <span>Crud Demo</span>\n                            </Link> \n                        </Menu.Item>\n\n\n                        <Menu.Item key=\"2\">\n                            <Link to=\"/ChartDemo\">\n                                <Icon type=\"bar-chart\" />\n                                <span>Chart Demo</span>\n                            </Link>\n\n                        </Menu.Item>\n                        {/* <Menu.Item key=\"3\">\n                            <Icon type=\"upload\" />\n                            <span>TODO</span>\n                        </Menu.Item> */}\n                    </Menu>\n                </Sider>\n                <Layout>\n                    <Header style={{ background: '#fff', padding: 0 }}>\n                        <Icon\n                            className=\"trigger\"\n                            type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n                            onClick={this.toggle}\n                        />\n                    </Header>\n                    <Content\n                        style={{\n                            margin: '24px 16px',\n                            padding: 24,\n                            background: '#fff',\n                            minHeight: 280,\n                        }}\n                    >\n                        <Switch>\n                            <Route path=\"/CrudDemo\" ><CrudDemo token = {this.state.token}/></Route>\n                            <Route path=\"/ChartDemo\" ><ChartDemo token = {this.state.token}/></Route>\n                            <Redirect to=\"/CrudDemo\" ></Redirect>\n                        </Switch>\n                    </Content>\n                </Layout>\n            </Layout>\n        );\n    }\n}\n","import React, { Component } from 'react'\n\n\nimport 'antd/dist/antd.css';\nimport './LoginAndRegister.css';\nimport { Form, Icon, Input, Button, Modal, Card, message } from 'antd';\n\nimport axios from 'axios'\n\nclass StringResource {\n    static username = 'username';\n    static password = 'password';\n    static register_username = 'register_username';\n    static register_password = 'register_password';\n    static register_confirm_password = 'register_confirm_password';\n}\n\n\nclass LoginAndRegisterBase extends Component {\n    state = {\n        visible: false,\n        confirmLoading: false,\n    };\n\n\n    funcHandleSubmitLogin = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields([StringResource.username, StringResource.password], async (err, values) => {\n            if (!err) {\n                let res = await axios.post('/login', {\n                    username: values[StringResource.username],\n                    password: values[StringResource.password],\n                })\n                if (res.data.status === 200) {\n                    this.props.history.replace({\n                        pathname: '/',\n                        state: {\n                            username: res.data.username,\n                            token: res.data.token\n                        }\n                    }\n                    );\n                }\n                else {\n                    message.warning(res.data.message);\n                }\n                \n            }\n        });\n    };\n\n    funcHandleSubmitRegister = () => {\n        this.props.form.validateFields([StringResource.register_username, StringResource.register_password, StringResource.register_confirm_password], async (err, values) => {\n            if (!err) {\n                this.setState({\n                    confirmLoading: true,\n                });\n\n                let res = await axios.post('/register', {\n                    username: values[StringResource.register_username],\n                    password: values[StringResource.register_password],\n                })\n\n                if (res.data.status === 200) {\n                    message.success(res.data.message);\n                }\n                else {\n                    message.warning(res.data.message);\n                }\n                this.setState({\n                    visible: false,\n                    confirmLoading: false,\n                });\n\n\n            }\n        });\n    };\n\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && value !== form.getFieldValue(StringResource.register_password)) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    };\n\n    validateToNextPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    };\n\n\n\n    handleCancel = () => {\n        console.log('Clicked cancel button');\n        this.setState({\n            visible: false,\n        });\n    };\n\n    funcShowRegisterModal = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const { visible, confirmLoading } = this.state;\n        // const formItemLayout = {\n        //     labelCol: {\n        //       xs: { span: 24 },\n        //       sm: { span: 8 },\n        //     },\n        //     wrapperCol: {\n        //       xs: { span: 24 },\n        //       sm: { span: 16 },\n        //     },\n        //   };\n        const formItemLayout = {\n            labelCol: {\n                span: 8\n            },\n            wrapperCol: {\n                span: 16\n            },\n        };\n        return (\n            <div className = \"Container\">\n                <Card className=\"ContainerCard\" title=\"DEMO\" extra={<a onClick={this.funcShowRegisterModal}>Account</a>}  >\n                    <Form onSubmit={this.funcHandleSubmitLogin} className=\"login-form\">\n                        <Form.Item>\n                            {getFieldDecorator(StringResource.username, {\n                                rules: [{ required: true, message: 'Please input your username!' }],\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    placeholder=\"Username\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator(StringResource.password, {\n                                rules: [{ required: true, message: 'Please input your Password!' }],\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n\n\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                                Log in\n                        </Button>\n                            Or <a onClick={this.funcShowRegisterModal}>register now!</a>\n                        </Form.Item>\n                    </Form>\n                    <Modal\n                        centered\n                        title=\"Register\"\n                        visible={visible}\n                        onOk={this.funcHandleSubmitRegister}\n                        confirmLoading={confirmLoading}\n                        onCancel={this.handleCancel}\n                        width=\"600px\"\n                    >\n                        <Form {...formItemLayout} onSubmit={this.handleSubmit} >\n                            <Form.Item label=\"user name\">\n                                {getFieldDecorator(StringResource.register_username, {\n                                    rules: [\n                                        // {\n                                        //     type: 'email',\n                                        //     message: 'The input is not valid E-mail!',\n                                        // },\n                                        {\n                                            required: true,\n                                            message: 'Please input your user name!',\n                                        },\n                                    ],\n                                })(<Input />)}\n                            </Form.Item>\n                            <Form.Item label=\"Password\" hasFeedback>\n                                {getFieldDecorator(StringResource.register_password, {\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: 'Please input your password!',\n                                        },\n                                        {\n                                            validator: this.validateToNextPassword,\n                                        },\n                                    ],\n                                })(<Input.Password />)}\n                            </Form.Item>\n                            <Form.Item label=\"Confirm Password\" hasFeedback>\n                                {getFieldDecorator(StringResource.register_confirm_password, {\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: 'Please confirm your password!',\n                                        },\n                                        {\n                                            validator: this.compareToFirstPassword,\n                                        },\n                                    ],\n                                })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n                            </Form.Item>\n                        </Form>\n\n\n\n                    </Modal>\n\n                </Card>\n\n            </div>\n        );\n    }\n\n\n\n\n}\nconst LoginAndRegister = Form.create()(LoginAndRegisterBase);\nexport default LoginAndRegister;\n\n","// import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React from 'react';\nimport './App.css';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom'\nimport MainPage from './components/MainPage/MainPage.jsx'\nimport LoginAndRegister from './components/LoginAndRegister/LoginAndRegister.jsx'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route path='/login' component={LoginAndRegister}></Route>\n          <Route path='/' component={MainPage}></Route>\n\n\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}